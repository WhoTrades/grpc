syntax = "proto3";

package finam.protobuf.transaq;

import "google/rpc/status.proto";
import "finam/protobuf/common/accounts.proto";
import "finam/protobuf/marketdata/marketdata.proto";
import "finam/protobuf/transaq/extstruct.proto";

option java_multiple_files = true;
option objc_class_prefix = "FNM";


message PortfolioRequest
{
    finam.protobuf.common.Account account  = 1;
}

message PortfolioResponse
{
    google.rpc.Status                status    = 1;
    finam.protobuf.transaq.Portfolio portfolio = 2;
}


message OrdersRequest
{
    finam.protobuf.common.Account account  = 1;
}

message OrdersResponse
{
    google.rpc.Status                     status = 1;
    repeated finam.protobuf.transaq.Order orders = 2;
}


message TradesRequest
{
    finam.protobuf.common.Account account  = 1;
}

message TradesResponse
{
    google.rpc.Status                     status = 1;
    repeated finam.protobuf.transaq.Trade trades = 2;
}


message ConfigRequest {
    string name = 1;
}

message  ConfigResponse {
    google.rpc.Status  status = 1;
    string             config = 2;
}


message SecuritiesListRequest {
    MarketsMask markets = 1;
}

message SecuritiesListResponse {
    google.rpc.Status  status = 1;
    repeated Security securities = 2;
}


message TradeInfoRequest {
    finam.protobuf.common.Account                                    account  = 1;
    finam.protobuf.marketdata.SecurityIdentifier.SeccodeAndSecboard  security = 2;
}


message TradeInfoResponse {
    google.rpc.Status  status      = 1;
    int64              max_buy     = 2;
    int64              max_sell    = 3;
    Security           security    = 5;
}

message VenuesRequest {
    finam.protobuf.common.Account   account = 1;
}

message VenuesResponse {
    google.rpc.Status   status = 1;
    repeated Venue      venues = 2;
}

service Info
{
	// Используются функции TAccess.dll:
    // GetPortfolioTPlus                       - TPlus
    // GetPortfolioMCT                         - MMA, USA
    // GetClientLimits, GetClientHoldings      - Forts
    // GetPortfolioUnionByClUnion              - Union
    rpc GetPortfolio(PortfolioRequest) returns (PortfolioResponse) {}
    
    // Оригинальная функция - GetConfigFile
    rpc GetConfig (ConfigRequest) returns (ConfigResponse) {}
    
    // Оригинальная функция - GetSecList
    rpc GetSecuritiesList (SecuritiesListRequest) returns (stream SecuritiesListResponse) {}
    
    // Список возможных площадок для выставления заявок на американском рынке.
    // В TAccess данные получаются по подписке на событие EventVenue.
    rpc GetVenues(VenuesRequest) returns (VenuesResponse) {}

    // Первое сообщение - снэпшот, далее приходят снэпшоты если что-то изменилось.
    // Для получения макс. купить/продать используются функции:
    // GetPortfolioTPlus              - TPlus
    // GetPortfolioMCT                - MMA, USA
    // GetPortfolioUnionByClUnionEx   - Union
    // Для получения параметров инструментов используется подписка на событие EventSecurity
    rpc SubscribeTradeInfo (TradeInfoRequest) returns (stream TradeInfoResponse) {}

    // Первое сообщение - снэпшот, далее приходят снэпшоты если что-то изменилось.
    // Используются функции те же TAccess, что и в GetPortfolio.
    rpc SubscribePortfolio (PortfolioRequest)  returns (stream PortfolioResponse) {}
}

