syntax = "proto3";

package finam.protobuf.transaq;

import "google/rpc/status.proto";
import "finam/protobuf/transaq/extstruct.proto";

option java_multiple_files = true;
option objc_class_prefix = "FNM";

message SubscribeLimitsRequest {
}

message SubscribeLimitsResponse {
    google.rpc.Status status = 1;
    bool              money  = 2;   // money or depo

    oneof TransaqLimits {
        PortfolioUnion portfolio_union = 3;
        PortfolioMCT   portfolio_mct   = 4;
    }
}

message SubscribeLimitsChangeRequest {
}

message SubscribeLimitsChangeResponse {  // обновление денежного или бумажного портфеля
    google.rpc.Status status = 1;

    string login = 2;
    MarketsMask market = 3;
    string register_code = 4;

    message MoneyChange {
        double open_balance_prev = 1;  // входящее сальдо, прежнее значение, руб.коп
        double open_balance = 2;  // входящее сальдо, новое значение, руб.коп
    }

    message DepoChange {
        string isin = 1;  // код инструмента
        int64 open_balance_prev = 2;  // входящее сальдо, прежнее значение, штук
        int64 open_balance = 3;  // входящее сальдо, новое значение, штук
    }
    oneof PortfolioChanges {
        MoneyChange money = 5;
        DepoChange depo = 6;
    }
}

message GetUnionLimitsRequest {
	oneof Identifier {
		string client = 1;
		string union_code = 2;
	}
}

message GetUnionLimitsResponse {
    google.rpc.Status status          = 1;
    PortfolioUnion    portfolio_union = 2;
}

message GetMCTLimitsRequest {
    string client = 1;
}

message GetMCTLimitsResponse {
    google.rpc.Status status        = 1;
    PortfolioMCT      portfolio_mct = 2;
}

service Limits {
    rpc SubscricbeLimits (SubscribeLimitsRequest) returns (stream SubscribeLimitsResponse) {}
    // SubscribeLimitsChange в отличии от SubscricbeLimits посылает только обновленные данные, а не весь портфель
    rpc SubscribeLimitsChange (SubscribeLimitsChangeRequest) returns (stream SubscribeLimitsChangeResponse) {}
    rpc GetUnionLimits  (GetUnionLimitsRequest)  returns (GetUnionLimitsResponse) {}
    rpc GetMCTLimits   (GetMCTLimitsRequest)   returns  (GetMCTLimitsResponse) {}
}
