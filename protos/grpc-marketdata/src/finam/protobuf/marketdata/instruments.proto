syntax = "proto3";

package finam.protobuf.marketdata;

import "google/protobuf/timestamp.proto";

import "finam/protobuf/common/types.proto";
import "finam/protobuf/common/currency.proto";
import "finam/protobuf/marketdata/marketdata.proto";

option java_multiple_files = true;
option objc_class_prefix = "FNM";

// these structs are in marketdata.proto now
//message Option {
//
//    enum Type {
//        CALL = 0;
//        PUT = 1;
//    }
//
//	enum Style {
//		EUROPEAN = 0;
//		AMERICAN = 1;
//	}
//
//	finam.protobuf.common.DecimalValue		strike				=	1;
//	Type									type				=	2;
//	google.protobuf.Timestamp				expiration_day		=	3;
//	google.protobuf.Timestamp				trade_last_day		=	4;
//	string									root				=	5;
//	Style									style				=	6;
//	SecurityIdentifier						underlying_asset	=	7;
//}
//
//message Future {
//	/*
//	message Maturity {
//		int32 year = 1;
//		finam.protobuf.common.Month	month = 2;
//	}
//	Maturity								maturity			=	1;
//	google.protobuf.Timestamp				trade_last_day		=	2;
//	google.protobuf.Timestamp				trade_first_day		=	3;
//	google.protobuf.Timestamp				delivery_last_day	=	4;
//	google.protobuf.Timestamp				notice_first_day	=	5;
//	SecurityIdentifier						underlying_asset	=	6;
//	finam.protobuf.common.DecimalValue		tick_value			=	7;
//	finam.protobuf.common.DecimalValue		tick_size			=	8;
//	*/
//}
//
//message Equity {
//	string									isin				=	1;
//}

message Entitlement {
}


enum InstrumentStatus {
	Unknown  = 0;
	Inactive = 65;    // A
	Delisted = 68;    // D
	Expired  = 69;    // E
	Moved    = 77;    // M
	Prelist  = 80;    // P
	Active   = 84;    // T
}

message Instrument {

	SecurityIdentifier						identity			=	1;
	finam.protobuf.common.DecimalValue		lot_size			=	2; /*количество базового актива в контракте*/
	finam.protobuf.common.DecimalValue		price_lot			=	3; /*для фьючеросв количество базового актива в контракте*/
	string									CFI					=	4; /*classification according to CFI standard https://en.wikipedia.org/wiki/ISO_10962*/
	finam.protobuf.common.Currency			currency			=	5;

	oneof	details_oneof {
		Option			option			= 6;
		Future			future			= 7;
		Equity			equity			= 8;
		Entitlement		entitlement		= 9;
	}

	string									name				=	10; /*name of instrument, description*/
	string									MIC					=	11; /*MIC code*/
	string									exchange_symbol		=	12; /*symbol code on exchange*/
	string									vendor_symbol		=	13; /*subscription code on vendor*/
	string									SEDOL				=	14; /*London Stock Exchange identifier*/
	string									bloomberg_symbol	=	15; /*instrument id on Bloomberg*/
	string									esignal_symbol		=	16; /*code on esignal*/

	InstrumentStatus						status				=	17;
}

message Request {
}

message Instruments
{
	repeated Instrument instruments = 1;
}

/*classification according to CFI standard https://en.wikipedia.org/wiki/ISO_10962*/

service MarketStructure {
	rpc GetOptions(Request) returns (stream Instruments) {}
	rpc GetEquities(Request) returns (stream Instruments) {}
	rpc GetFutures(Request) returns (stream Instruments) {}
	rpc GetEntitlements(Request) returns (stream Instruments) {}
}