syntax = "proto3";

package proto.marketdata;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/type/date.proto";

import "proto/common/types.proto";

option java_multiple_files = true;
option objc_class_prefix = "FNM";

enum State
{
    STATE_UNKNOWN = 0;
    //  is actual
    STATE_ONLINE = 1;

    //  is out of shedule or off
    STATE_CLOSE = 2;
    STATE_PREMARKET = 3;
    STATE_AUCTION = 4;
    STATE_POSTMARKET= 5;

    //  trade is stoped
    STATE_PAUSE = 6;
}

message Quote {
    message TechState
    {
        proto.marketdata.State api_state     = 2;    // conection state with market API  online/close
        proto.marketdata.State service_state = 3;   // connection state between services online/close

        google.protobuf.Timestamp last_update_vendor_time = 30;
        google.protobuf.Timestamp last_update_ta_time     = 31;
    }

    //  price_*  - all in main session
    //  last_*   - all in whole rent day

    proto.common.Decimal        last                = 10;   //  Include all regimes
    google.protobuf.Int32Value  last_dir            = 11;   // direction bitween last and prev_last
    proto.common.Decimal        last_change_percent = 12;   // (last-prev_close)/prev_close * 100 %
    google.protobuf.Int32Value  last_change_dir     = 13;   // direction between change and prev_change
    proto.common.Decimal        last_change         = 14;   // last - prev_close
    google.protobuf.Timestamp   last_time           = 15;
    proto.common.Decimal        last_trade_size     = 16;   //  fractional number of securities(type was changed to fractional due to cryptocurrency)
    google.protobuf.Int64Value  last_trade_count    = 17;

    proto.common.Decimal        last_open           = 18;
    proto.common.Decimal        last_high           = 19;
    proto.common.Decimal        last_low            = 20;
    proto.common.Decimal        last_volume         = 21;   //  NOTE: inch	(see comment for last_trade_size)
    proto.common.Decimal        last_value          = 22;   //  NOTE: not translated from RFA (money)


    //  description look in last
    proto.common.Decimal        price               = 30;
    google.protobuf.Int32Value  price_dir           = 31;
    proto.common.Decimal        price_change_percent= 32;
    google.protobuf.Int32Value  price_change_dir    = 33;
    proto.common.Decimal        price_change        = 34;
    google.protobuf.Timestamp   price_time          = 35;
    proto.common.Decimal        price_trade_size    = 36;
    google.protobuf.Int64Value  price_trade_count   = 37;

    proto.common.Decimal        price_open          = 38;
    proto.common.Decimal        price_high          = 39;
    proto.common.Decimal        price_low           = 40;
    proto.common.Decimal        price_volume        = 41;   //  NOTE: inch	(see comment for last_trade_size)
    proto.common.Decimal        price_value         = 42;   //  NOTE: not translated from RFA (money)


    proto.common.Decimal        bid                 = 50;
    proto.common.Decimal        bid_vol             = 51;   //  inch (see comment for last_trade_size)
    google.protobuf.Timestamp   bid_time            = 52;
    proto.common.Decimal        ask                 = 53;
    proto.common.Decimal        ask_vol             = 54;   //  inch (see comment for last_trade_size)
    google.protobuf.Timestamp   ask_time            = 55;

    proto.common.Decimal        open_interes        = 60;
    proto.common.Decimal        delta_oi            = 61;   // open_open_interes - open_interes


    proto.common.Decimal        official_close      = 70;   //  today official close price

    proto.common.Decimal        yhigh               = 80;   //  calendar52WeekHigh
    proto.common.Decimal        ylow                = 81;   //  calendar52WeekLow
    proto.common.Decimal        w52high             = 82;   //  rolling52WeekHigh							-- to delete  --
    proto.common.Decimal        w52low              = 83;   //  rolling52WeekLow								-- to delete  --



	proto.common.Decimal        day_range		    = 84;   //  high - low
	proto.common.Decimal        day_range_ticks	    = 85;   //  high - low in ticks (tick size)


	message Prev {
		proto.common.Decimal	close			    = 1;    //  previous close on main session
		proto.common.Decimal	official_close	    = 2;    //  previous official close
		proto.common.Decimal	close_post		    = 3;    //  previous close on post market === close
		google.type.Date	    close_date		    = 4;    //  closedate===HSTCLSEDATE
	}
    Prev prev      = 100;                                   //  previous trading_day
    Prev prev_prev = 101;                                   //  2 trading day ago

	message W52 {
		proto.common.Decimal    high				= 1;	//  rolling52WeekHigh
		proto.common.Decimal    low				    = 2;	//  rolling52WeekLow
		proto.common.Decimal    ma				    = 3;    //  moving average close for last 52 weeks
		proto.common.Decimal    ma_volume		    = 4;	//  moving average volume for last 52 weeks
	}
	W52	w52       = 102;

	message D200 {
		proto.common.Decimal    high				= 1;	//  rolling200DayHigh
		proto.common.Decimal    low				    = 2;	//  rolling200DayLow
		proto.common.Decimal    ma				    = 3;    //  moving average close for last 200 days
		proto.common.Decimal    ma_volume		    = 4;	//  moving average volume for last 200 days
	}
    D200 d200 = 103;


    proto.marketdata.State      state               = 120;  //  status of quote
    TechState                   tech_state          = 121;

    google.protobuf.Timestamp vendor_activity_time  = 122;
    google.protobuf.Timestamp feed_time             = 123;  // время, когда источник данных получил данную котировку


    // Дополнительная информация
    message Additions {
        // Дополнительная информация для инструмента 'фьючерс'
        message Fut {
            proto.common.Decimal buy_deposit = 1;  // ГО покупателя
            proto.common.Decimal sell_deposit = 2; // ГО продавца
        }

        // Дополнительная информация для инструмента 'Funding'
        message Funding {
	        proto.common.Decimal        frr         = 1;  // Flash Return Rate - average of all fixed rate funding over the last hour
	        google.protobuf.Int32Value  bid_period  = 2;  // Bid period covered in seconds
	        google.protobuf.Int32Value  aks_period  = 3;  // Ask period covered in seconds
        }

        oneof additions_oneof {
            Fut     fut     = 1;
	        Funding funding = 2;
        }
    }

    // Дополнительные данные, специфичные для разных инструментов
    Additions additions = 1024;
}


// TODO: Перед тем как начать использовать типы
// Decimal и/или Int64Value
// необходимо проверить на сколько это увеличит поток передаваемых данных.
message Trade {
    enum Direction {
        UNKNOWN = 0;
        BUY = 1;
        SELL = 2;
    }

    enum Type {
        MAINSESSION = 0;
        EXTENDED_HOURS = 1;
    }

    // Номер сделки (уникален в рамках биржевого дня и биржи).
    int64 tradeno = 1;
    // Идентификатор биржи
    int64 exchange_id = 2;
    // UTC дата и время сделки.
    google.protobuf.Timestamp date = 3;

    proto.common.Decimal price = 4;

    // inch of securities
    proto.common.Decimal qty = 5;

    // Тип сделки (buy or sell).
    Direction direction  = 6;

    Type type = 7;

    proto.common.Decimal open_interes = 8;

    google.protobuf.Timestamp feed_time = 9;  // время, когда источник данных получил данную сделку

    google.protobuf.Int32Value period = 10;  // количество времени в секундах, в течение которого была проведена операция по финансированию
}

message OrderBook {

    message Row {
        enum Action {
            Unknown = 0;
            AddOrUpdate = 1;
            Remove = 2;
        }
        proto.common.Decimal price    = 1;
        oneof data_oneof {
            proto.common.Decimal sell = 2;
            proto.common.Decimal buy  = 3;
        }
        string mpid    = 4;  // for extended orderbook
        Action action  = 5;
	    google.protobuf.Int32Value period = 6;  // количество времени в секундах, в течение которого была проведена операция по финансированию
    }

    repeated Row rows  = 1;
}

message AvailableDataInfoResponse {
    google.protobuf.Timestamp start = 1;
    google.protobuf.Timestamp end = 2;
    int64 count = 3;
}

// Bound задает временнОй или количественный интервал для запрашиваемых данных [start, end].
// Точки начала и окончания входят в интервал.
message Bound {
    // ВременнАя точку начала отсчета для получаемых данных.
    // Если значение не задано (== 0), то за время начало отсчета принимается текущие время (время начала обработки запроса сервисом).
    google.protobuf.Timestamp start = 1;

    // Определеят способ вычисления конечной точки временнОго интеравала и может принимать одно из заданных значений.
    oneof end {
        // Определяет обсолютное значение окончания временнОго интервала. Может быть меньше точки начала отсчета.
        google.protobuf.Timestamp to = 2;

        // Определяет продолжительность временнОго интервала. Может принимать как положительные так и отрицательные значения.
        google.protobuf.Duration duration = 3;

        // Определяет количество возвращаемых данных (в штуках). Может принимать как положительное так и отрицательное значение.
        // Если значение положительное, то будут возвращены данные начиная от времени начала отсчета, в количестве не превыщающим заданное значение.
        // Если значение отрицательное, то будут возвращены данные предществующие данным на начало отсчета (включая время начало отсчета), в количестве не превыщающим модуль заданного значения.
        int32 count = 4;
    }
}



message OptionFamilyInfo {
    uint32 strikes                      = 1;  // Сколько всего страйков в семействе

    uint64 total_call_volume            = 2;  // Какой сегодня суммарный объём торгов в колах
    uint64 total_call_positions         = 3;  // Сколько открыто позиций в колах
    uint64 call_strikes_with_positions  = 4;  // В скольких страйках открыты позиции в колах
    int64  call_positions_change        = 5;  //- Совокупная изменение количества позиций в колах с утра

    uint64 total_put_volume             = 12; // Какой сегодня суммарный объём торгов в путах
    uint64 total_put_positions          = 13; //- Сколько открыто позиций в путах
    uint64 put_strikes_with_positions   = 14; //- В скольких страйках открыты позиции в путах
    int64  put_positions_change         = 15; // - Совокупный изменение количества позиций в путах с утра
}
